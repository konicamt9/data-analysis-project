#function 
library(enrichR)

load list of up/downregulated genes

perform_enrichment_analysis <- function(gene_lists, databases) {
  # Ensure enrichR is initialized
  if (!requireNamespace("enrichR", quietly = TRUE)) {
    stop("The 'enrichR' package is required. Install it using install.packages('enrichR').")
  }
  
  # Initialize an empty list to store enrichment results
  enrichment_results <- list()
  
  # Loop through each gene list in the input
  for (name in names(gene_lists)) {
    cat("Performing enrichment for:", name, "\n")
    
    # Perform enrichment analysis for the current gene list
    enriched <- tryCatch({
      enrichr(gene_lists[[name]], databases)
    }, error = function(e) {
      message("Error in enrichment for ", name, ": ", e$message)
      return(NULL)
    })
    
    # Process results for the specified database
    if (!is.null(enriched) && databases %in% names(enriched)) {
      fe_df <- enriched[[databases]]
      fe_df$mlog10pv <- -log10(fe_df$Adjusted.P.value)  # Compute -log10(p-value)
      fe_df <- fe_df[order(fe_df$mlog10pv, decreasing = TRUE), ]  # Order by significance
      fe_df$Term <- factor(fe_df$Term, levels = rev(fe_df$Term))  # Factorize Terms
      
      # Store results in the list
      enrichment_results[[name]] <- fe_df
    } else {
      enrichment_results[[name]] <- NULL
    }
  }
  
  return(enrichment_results)
}


dbs <- c("WikiPathways_2024_Mouse")

# Perform enrichment for all gene lists
fea_wikip <- perform_enrichment_analysis(upregulated_lists, databases = dbs)

# Example: Accessing results for PB2_D1
fea_reactome[["PB2_D1"]]
