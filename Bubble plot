enrichment_results_list <- list(
  PB2_D1 = PB2_enrichment_D1,  # Enrichment results for PB2_D1
  PB2_D2 = PB2_enrichment_D2,
  WT_D1 = WT_enrichment_D1,
  WT_D2 = WT_enrichment_D2,
  WT_D4 = WT_enrichment_D4
  # Add other variant-timepoint combinations
)

database <- "GO_Biological_Process_2023"

# Create the bubble plot
bubble_plot <- create_bubble_plot_comparison(
  enrichment_results_list = enrichment_results_list,
  database = database,
  top_n = 10,  # Top 10 terms for each variant-timepoint
  output_file = "bubble_plot_comparison.png"  # Save plot
)

# Display the plot
print(bubble_plot)
____________________________________________________________

library(dplyr)
library(ggplot2)

create_bubble_plot <- function(enrichment_results_list, top_n = 20) {
  # Combine all enrichment results into a single dataframe
  combined_data <- do.call(rbind, lapply(names(enrichment_results_list), function(name) {
    enrichment_data <- enrichment_results_list[[name]]
    if (is.null(enrichment_data)) return(NULL)
    
    # Extract variant and timepoint from the name
    enrichment_data$Variant <- sub("_.*", "", name)  # e.g., PB2
    enrichment_data$Timepoint <- sub(".*_", "", name)  # e.g., D1
    
    # Add Gene_Count and mlog10pv columns if not already present
    enrichment_data <- enrichment_data %>%
      mutate(
        Gene_Count = as.numeric(sub("/.*", "", Overlap)),  # Extract gene count from Overlap
        mlog10pv = -log10(Adjusted.P.value)               # Compute -log10(P-value)
      )
    enrichment_data
  }))
  
  # Ensure data is not NULL
  if (is.null(combined_data)) {
    stop("No enrichment data found in the provided list.")
  }
  
  # Filter for significant terms and select top terms per variant and timepoint
  filtered_data <- combined_data %>%
    filter(mlog10pv > 2) %>%
    group_by(Variant, Timepoint) %>%
    slice_max(order_by = mlog10pv, n = top_n) %>%
    ungroup()
  
  # Create the bubble plot
  bubble_plot <- ggplot(filtered_data, aes(
    x = Timepoint,          # Timepoints on x-axis
    y = Term,               # Enriched terms on y-axis
    size = Gene_Count,      # Bubble size: Gene count
    color = mlog10pv        # Bubble color: -log10(P-value)
  )) +
    geom_point(alpha = 0.7) +
    scale_color_gradient(low = "lightblue", high = "darkblue") +
    facet_wrap(~ Variant, scales = "free_y") +  # Separate panels for each variant
    labs(
      title = "Functional Enrichment Comparison Across Variants and Timepoints",
      x = "Timepoint",
      y = "Enriched Term",
      size = "Gene Count",
      color = "-log10(P-value)"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
      axis.text.y = element_text(size = 8),
      axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
      legend.position = "right"
    )
  
  return(bubble_plot)
}

# Example enrichment_results_list
enrichment_results_list <- list(
  PB2_D1 = fea_PB2_D1_reactome,
  PB2_D2 = fea_PB2_D2_reactome,
  WT_D1 = fea_WT_D1_reactome,
  WT_D2 = fea_WT_D2_reactome,
  HA_D1 = fea_HA_D1_reactome,
  HA_D4 = fea_HA_D4_reactome
)

# Generate the bubble plot
bubble_plot <- create_bubble_plot(enrichment_results_list, top_n = 20)

# Print the plot
print(bubble_plot)
